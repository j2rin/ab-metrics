create fact seller_item_event as
select
    t.event_date as __date__,
    t.activation_type,
    t.close_reason_id,
    t.close_status_id,
    t.edits,
    t.edits_address,
    t.edits_by_src,
    t.edits_description,
    t.edits_photo,
    t.edits_price,
    t.edits_started,
    t.edits_started_by_src,
    t.edits_title,
    t.event_date,
    t.is_after_ttl,
    t.is_dead,
    t.is_delivery_active,
    t.is_item_start,
    t.is_marketplace,
    t.item_id as item,
    t.lf_amount_net,
    t.manual_moderation,
    t.moder_flags,
    t.user_id as user,
    t.user_id
from dma.vo_seller_item_event t
;

create metrics seller_item_event as
select
    sum(edits_started) as item_edit_starts,
    sum(edits_started_by_src) as item_edit_starts_by_src,
    sum(edits) as item_edits,
    sum(edits_address) as item_edits_address,
    sum(edits_by_src) as item_edits_by_src,
    sum(edits_description) as item_edits_description,
    sum(edits_photo) as item_edits_photo_add,
    sum(edits_price) as item_edits_price,
    sum(edits_title) as item_edits_title,
    sum(case when moder_flags & 7 > 0 then 1 end) as items_allowed,
    sum(case when moder_flags & 7 > 0 and is_marketplace = False then 1 end) as items_allowed_classified,
    sum(case when moder_flags & 7 > 0 and is_marketplace = True then 1 end) as items_allowed_marketplace,
    sum(case when close_status_id = 10536750001 then 1 end) as items_archived,
    sum(case when moder_flags & 8 > 0 then 1 end) as items_blocked,
    sum(case when moder_flags & 8 > 0 and is_marketplace = False then 1 end) as items_blocked_classified,
    sum(case when moder_flags & 32 > 0 then 1 end) as items_blocked_duplicate,
    sum(case when moder_flags & 8 > 0 and is_marketplace = True then 1 end) as items_blocked_marketplace,
    sum(case when moder_flags & 72 > 0 then 1 end) as items_blocked_rejected,
    sum(case when moder_flags & 72 > 0 and is_marketplace = False then 1 end) as items_blocked_rejected_classified,
    sum(case when moder_flags & 72 > 0 and is_marketplace = True then 1 end) as items_blocked_rejected_marketplace,
    sum(case when moder_flags & 16 > 0 then 1 end) as items_blocked_user_blocked,
    sum(case when moder_flags & 131072 > 0 then 1 end) as items_category_changed_by_moderator,
    sum(case when close_status_id = 9 then 1 end) as items_closed_by_ttl,
    sum(case when close_status_id = 7 then 1 end) as items_closed_by_user,
    sum(case when close_status_id = 7 and (close_reason_id is null or close_reason_id = 500006) then 1 end) as items_closed_no_answer,
    sum(case when close_reason_id != 500006 and close_status_id = 7 then 1 end) as items_closed_with_answer,
    sum(case when manual_moderation = 1 then 1 end) as items_manual_moderations,
    sum(case when manual_moderation is not null then 1 end) as items_moderations,
    sum(case when activation_type != 'Wait' and is_after_ttl = True and is_item_start = False then 1 end) as items_reactivated,
    sum(case when activation_type != 'Wait' and is_after_ttl = True and is_item_start = False and is_marketplace = False then 1 end) as items_reactivated_classified,
    sum(case when activation_type in ('Free', 'Free.Reopen', 'NoLF') and is_after_ttl = True and is_item_start = False then 1 end) as items_reactivated_free,
    sum(case when activation_type != 'Wait' and is_after_ttl = True and is_item_start = False and is_marketplace = True then 1 end) as items_reactivated_marketplace,
    sum(case when activation_type != 'Wait' and is_after_ttl = True and is_dead = False and is_item_start = False then 1 end) as items_reactivated_net,
    sum(case when activation_type != 'Wait' and is_after_ttl = True and is_dead = False and is_item_start = False and is_marketplace = False then 1 end) as items_reactivated_net_classified,
    sum(case when activation_type != 'Wait' and is_after_ttl = True and is_dead = False and is_item_start = False and is_marketplace = True then 1 end) as items_reactivated_net_marketplace,
    sum(case when activation_type != 'Wait' and is_after_ttl = True and is_dead = False and is_item_start = False and is_delivery_active = True then 1 end) as items_reactivated_net_with_delivery,
    sum(case when activation_type in ('Package', 'Package_subs_afterpaid', 'Package_subs_prepaid', 'Single', 'Single_subs_afterpaid') and is_after_ttl = True and is_item_start = False then 1 end) as items_reactivated_paid,
    sum(case when activation_type = 'Wait' and is_after_ttl = True and is_item_start = False then 1 end) as items_reactivated_wait,
    sum(case when activation_type != 'Wait' and is_after_ttl = True and is_item_start = False and is_delivery_active = True then 1 end) as items_reactivated_with_delivery,
    sum(case when moder_flags & 64 > 0 then 1 end) as items_rejected,
    sum(case when moder_flags & 64 > 0 and is_marketplace = False then 1 end) as items_rejected_classified,
    sum(case when moder_flags & 2048 > 0 then 1 end) as items_rejected_contacts_in_description,
    sum(case when moder_flags & 16384 > 0 then 1 end) as items_rejected_contacts_on_photo,
    sum(case when moder_flags & 64 > 0 and is_marketplace = True then 1 end) as items_rejected_marketplace,
    sum(case when moder_flags & 65536 > 0 then 1 end) as items_rejected_mileage,
    sum(case when moder_flags & 128 > 0 then 1 end) as items_rejected_phone_in_other_profile,
    sum(case when moder_flags & 512 > 0 then 1 end) as items_rejected_pricelist,
    sum(case when moder_flags & 256 > 0 then 1 end) as items_rejected_wrong_cat,
    sum(case when moder_flags & 1024 > 0 then 1 end) as items_rejected_wrong_item_type,
    sum(case when moder_flags & 8192 > 0 then 1 end) as items_rejected_wrong_price,
    sum(case when moder_flags & 4096 > 0 then 1 end) as items_rejected_wrong_vin,
    sum(case when moder_flags & 32768 > 0 then 1 end) as items_rejected_year_of_issue,
    sum(case when close_reason_id = 500012 then 1 end) as items_sold_another_reason,
    sum(case when close_reason_id = 500011 then 1 end) as items_sold_notonavito,
    sum(case when close_reason_id = 500004 then 1 end) as items_sold_onavito,
    sum(case when activation_type != 'Wait' and is_item_start = True then 1 end) as items_started,
    sum(case when activation_type != 'Wait' and is_item_start = True and is_marketplace = False then 1 end) as items_started_classified,
    sum(case when activation_type != 'Wait' and is_dead = True and is_item_start = True then 1 end) as items_started_dead,
    sum(case when activation_type in ('Free', 'Free.Reopen', 'NoLF') and is_item_start = True then 1 end) as items_started_free,
    sum(case when activation_type != 'Wait' and is_item_start = True and is_marketplace = True then 1 end) as items_started_marketplace,
    sum(case when activation_type != 'Wait' and is_dead = False and is_item_start = True then 1 end) as items_started_net,
    sum(case when activation_type != 'Wait' and is_dead = False and is_item_start = True and is_marketplace = False then 1 end) as items_started_net_classified,
    sum(case when activation_type != 'Wait' and is_dead = False and is_item_start = True and is_marketplace = True then 1 end) as items_started_net_marketplace,
    sum(case when activation_type != 'Wait' and is_dead = False and is_item_start = True and is_delivery_active = True then 1 end) as items_started_net_with_delivery,
    sum(case when activation_type in ('Package', 'Package_subs_afterpaid', 'Package_subs_prepaid', 'Single', 'Single_subs_afterpaid') and is_item_start = True then 1 end) as items_started_paid,
    sum(case when activation_type = 'Wait' and is_item_start = True then 1 end) as items_started_wait,
    sum(case when activation_type != 'Wait' and is_item_start = True and is_delivery_active = True then 1 end) as items_started_with_delivery,
    sum(lf_amount_net) as lf_amount_net
from seller_item_event t
;

create metrics seller_item_event_item as
select
    sum(case when item_edit_starts > 0 then 1 end) as items_edit_started,
    sum(case when item_edit_starts_by_src > 0 then 1 end) as items_edit_started_by_src,
    sum(case when item_edits > 0 then 1 end) as items_edited,
    sum(case when item_edits_address > 0 then 1 end) as items_edited_address,
    sum(case when item_edits_by_src > 0 then 1 end) as items_edited_by_src,
    sum(case when item_edits_description > 0 then 1 end) as items_edited_description,
    sum(case when item_edits_photo_add > 0 then 1 end) as items_edited_photo_add,
    sum(case when item_edits_price > 0 then 1 end) as items_edited_price,
    sum(case when item_edits_title > 0 then 1 end) as items_edited_title,
    sum(case when items_manual_moderations > 0 then 1 end) as items_manual_moderated,
    sum(case when items_moderations > 0 then 1 end) as items_moderated
from (
    select
        user_id, item,
        sum(edits_started) as item_edit_starts,
        sum(edits_started_by_src) as item_edit_starts_by_src,
        sum(edits) as item_edits,
        sum(edits_address) as item_edits_address,
        sum(edits_by_src) as item_edits_by_src,
        sum(edits_description) as item_edits_description,
        sum(edits_photo) as item_edits_photo_add,
        sum(edits_price) as item_edits_price,
        sum(edits_title) as item_edits_title,
        sum(case when manual_moderation = 1 then 1 end) as items_manual_moderations,
        sum(case when manual_moderation is not null then 1 end) as items_moderations
    from seller_item_event t
    group by user_id, item
) _
;

create metrics seller_item_event_user as
select
    sum(case when items_reactivated_net > 0 then 1 end) as items_reactivated_net_conversion,
    sum(case when items_sold_onavito > 0 then 1 end) as items_sold_onavito_conversion,
    sum(case when items_started_net > 0 then 1 end) as items_started_net_conversion,
    sum(case when item_edits_address > 0 then 1 end) as sellers_edited_address,
    sum(case when items_allowed > 0 then 1 end) as users_item_allowed,
    sum(case when items_archived > 0 then 1 end) as users_item_archived,
    sum(case when items_blocked > 0 then 1 end) as users_item_blocked,
    sum(case when items_blocked_duplicate > 0 then 1 end) as users_item_blocked_duplicate,
    sum(case when items_blocked_rejected > 0 then 1 end) as users_item_blocked_rejected,
    sum(case when items_blocked_user_blocked > 0 then 1 end) as users_item_blocked_user_blocked,
    sum(case when items_category_changed_by_moderator > 0 then 1 end) as users_item_category_changed_by_moderator,
    sum(case when items_closed_by_ttl > 0 then 1 end) as users_item_closed_by_ttl,
    sum(case when items_closed_by_user > 0 then 1 end) as users_item_closed_by_user,
    sum(case when items_closed_no_answer > 0 then 1 end) as users_item_closed_no_answer,
    sum(case when items_closed_with_answer > 0 then 1 end) as users_item_closed_with_answer,
    sum(case when item_edits > 0 then 1 end) as users_item_edit,
    sum(case when item_edits_description > 0 then 1 end) as users_item_edit_description,
    sum(case when item_edits_photo_add > 0 then 1 end) as users_item_edit_photo_add,
    sum(case when item_edits_price > 0 then 1 end) as users_item_edit_price,
    sum(case when item_edit_starts > 0 then 1 end) as users_item_edit_start,
    sum(case when item_edit_starts_by_src > 0 then 1 end) as users_item_edit_start_by_src,
    sum(case when item_edits_title > 0 then 1 end) as users_item_edit_title,
    sum(case when item_edits_by_src > 0 then 1 end) as users_item_edited_by_src,
    sum(case when items_manual_moderations > 0 then 1 end) as users_item_manual_moderated,
    sum(case when items_moderations > 0 then 1 end) as users_item_moderated,
    sum(case when items_reactivated > 0 then 1 end) as users_item_reactivated,
    sum(case when items_reactivated_free > 0 then 1 end) as users_item_reactivated_free,
    sum(case when items_reactivated_paid > 0 then 1 end) as users_item_reactivated_paid,
    sum(case when items_reactivated_wait > 0 then 1 end) as users_item_reactivated_wait,
    sum(case when items_rejected > 0 then 1 end) as users_item_rejected,
    sum(case when items_rejected_contacts_in_description > 0 then 1 end) as users_item_rejected_contacts_in_description,
    sum(case when items_rejected_contacts_on_photo > 0 then 1 end) as users_item_rejected_contacts_on_photo,
    sum(case when items_rejected_mileage > 0 then 1 end) as users_item_rejected_mileage,
    sum(case when items_rejected_phone_in_other_profile > 0 then 1 end) as users_item_rejected_phone_in_other_profile,
    sum(case when items_rejected_pricelist > 0 then 1 end) as users_item_rejected_pricelist,
    sum(case when items_rejected_wrong_cat > 0 then 1 end) as users_item_rejected_wrong_cat,
    sum(case when items_rejected_wrong_item_type > 0 then 1 end) as users_item_rejected_wrong_item_type,
    sum(case when items_rejected_wrong_price > 0 then 1 end) as users_item_rejected_wrong_price,
    sum(case when items_rejected_wrong_vin > 0 then 1 end) as users_item_rejected_wrong_vin,
    sum(case when items_rejected_year_of_issue > 0 then 1 end) as users_item_rejected_year_of_issue,
    sum(case when items_sold_another_reason > 0 then 1 end) as users_item_sold_another_reason,
    sum(case when items_sold_notonavito > 0 then 1 end) as users_item_sold_notonavito,
    sum(case when items_started > 0 then 1 end) as users_item_started,
    sum(case when items_started_free > 0 then 1 end) as users_item_started_free,
    sum(case when items_started_paid > 0 then 1 end) as users_item_started_paid,
    sum(case when items_started_wait > 0 then 1 end) as users_item_started_wait,
    sum(case when lf_amount_net > 0 then 1 end) as users_lf
from (
    select
        user_id, user,
        sum(edits_started) as item_edit_starts,
        sum(edits_started_by_src) as item_edit_starts_by_src,
        sum(edits) as item_edits,
        sum(edits_address) as item_edits_address,
        sum(edits_by_src) as item_edits_by_src,
        sum(edits_description) as item_edits_description,
        sum(edits_photo) as item_edits_photo_add,
        sum(edits_price) as item_edits_price,
        sum(edits_title) as item_edits_title,
        sum(case when moder_flags & 7 > 0 then 1 end) as items_allowed,
        sum(case when close_status_id = 10536750001 then 1 end) as items_archived,
        sum(case when moder_flags & 8 > 0 then 1 end) as items_blocked,
        sum(case when moder_flags & 32 > 0 then 1 end) as items_blocked_duplicate,
        sum(case when moder_flags & 72 > 0 then 1 end) as items_blocked_rejected,
        sum(case when moder_flags & 16 > 0 then 1 end) as items_blocked_user_blocked,
        sum(case when moder_flags & 131072 > 0 then 1 end) as items_category_changed_by_moderator,
        sum(case when close_status_id = 9 then 1 end) as items_closed_by_ttl,
        sum(case when close_status_id = 7 then 1 end) as items_closed_by_user,
        sum(case when close_status_id = 7 and (close_reason_id is null or close_reason_id = 500006) then 1 end) as items_closed_no_answer,
        sum(case when close_reason_id != 500006 and close_status_id = 7 then 1 end) as items_closed_with_answer,
        sum(case when manual_moderation = 1 then 1 end) as items_manual_moderations,
        sum(case when manual_moderation is not null then 1 end) as items_moderations,
        sum(case when activation_type != 'Wait' and is_after_ttl = True and is_item_start = False then 1 end) as items_reactivated,
        sum(case when activation_type in ('Free', 'Free.Reopen', 'NoLF') and is_after_ttl = True and is_item_start = False then 1 end) as items_reactivated_free,
        sum(case when activation_type != 'Wait' and is_after_ttl = True and is_dead = False and is_item_start = False then 1 end) as items_reactivated_net,
        sum(case when activation_type in ('Package', 'Package_subs_afterpaid', 'Package_subs_prepaid', 'Single', 'Single_subs_afterpaid') and is_after_ttl = True and is_item_start = False then 1 end) as items_reactivated_paid,
        sum(case when activation_type = 'Wait' and is_after_ttl = True and is_item_start = False then 1 end) as items_reactivated_wait,
        sum(case when moder_flags & 64 > 0 then 1 end) as items_rejected,
        sum(case when moder_flags & 2048 > 0 then 1 end) as items_rejected_contacts_in_description,
        sum(case when moder_flags & 16384 > 0 then 1 end) as items_rejected_contacts_on_photo,
        sum(case when moder_flags & 65536 > 0 then 1 end) as items_rejected_mileage,
        sum(case when moder_flags & 128 > 0 then 1 end) as items_rejected_phone_in_other_profile,
        sum(case when moder_flags & 512 > 0 then 1 end) as items_rejected_pricelist,
        sum(case when moder_flags & 256 > 0 then 1 end) as items_rejected_wrong_cat,
        sum(case when moder_flags & 1024 > 0 then 1 end) as items_rejected_wrong_item_type,
        sum(case when moder_flags & 8192 > 0 then 1 end) as items_rejected_wrong_price,
        sum(case when moder_flags & 4096 > 0 then 1 end) as items_rejected_wrong_vin,
        sum(case when moder_flags & 32768 > 0 then 1 end) as items_rejected_year_of_issue,
        sum(case when close_reason_id = 500012 then 1 end) as items_sold_another_reason,
        sum(case when close_reason_id = 500011 then 1 end) as items_sold_notonavito,
        sum(case when close_reason_id = 500004 then 1 end) as items_sold_onavito,
        sum(case when activation_type != 'Wait' and is_item_start = True then 1 end) as items_started,
        sum(case when activation_type in ('Free', 'Free.Reopen', 'NoLF') and is_item_start = True then 1 end) as items_started_free,
        sum(case when activation_type != 'Wait' and is_dead = False and is_item_start = True then 1 end) as items_started_net,
        sum(case when activation_type in ('Package', 'Package_subs_afterpaid', 'Package_subs_prepaid', 'Single', 'Single_subs_afterpaid') and is_item_start = True then 1 end) as items_started_paid,
        sum(case when activation_type = 'Wait' and is_item_start = True then 1 end) as items_started_wait,
        sum(lf_amount_net) as lf_amount_net
    from seller_item_event t
    group by user_id, user
) _
;
